<UserControl x:Class="HeBianGu.ImagePlayer.ImagePlayerControl.MediaPlayerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HeBianGu.ImagePlayer.ImagePlayerControl"
             mc:Ignorable="d"  Background="Black" MouseDoubleClick="UserControl_MouseDoubleClick"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--自定义资源引用-->
                <!--<ResourceDictionary Source="/HeBianGu.Base.WpfBase;component/Themes/HeBianGu.Themes.Resource.xaml"/>
                <ResourceDictionary Source="/HeBianGu.Base.WpfBase;component/Themes/Color/LightThemeResource.xaml"/>
                --><!--<ResourceDictionary Source="/HeBianGu.Base.WpfBase;component/Themes/HeBianGu.Thremes.Control.xaml"/>--><!--
                <ResourceDictionary Source="/HeBianGu.ImagePlayer.ImagePlayerControl;component/Themes/General.xaml"/>
                <ResourceDictionary Source="/HeBianGu.ImagePlayer.ImagePlayerControl;component/Themes/Slider.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>

            <RoutedUICommand x:Key="Resource.RouteCommand.Play" Text="播放"/>

            <Style x:Key="Style.Tool.Button" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="30"/>
            </Style>
            <Style x:Key="Style.Slider.Button" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="20"/>
            </Style>

            <Style x:Key="Style.Slider.FButton" TargetType="{x:Type local:MediaButton}" BasedOn="{StaticResource MenuIconButtonDefaultStyle}">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="20"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#f1f1f1"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <Style TargetType="{x:Type local:DynamicShape}">
                <Setter Property="StrokeDashArray" Value="8,8"/>
                <Setter Property="StrokeDashCap" Value="Triangle"/>
                <Setter Property="Stroke" Value="Blue"/>
                <Setter Property="StrokeThickness" Value="3"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <SolidColorBrush Color="LightGray" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Style>


            <local:TimeSpanConverter x:Key="Convert.TimeSpan"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <DockPanel>
            <!--<DockPanel Height="50" DockPanel.Dock="Bottom"  Background="#242424"> 
                
                --><!--播放按钮--><!--
                <DockPanel Grid.Column="1"  HorizontalAlignment="Center" VerticalAlignment="Center">

                    <ToggleButton x:Name="toggle_play" Margin="30,0"  Foreground="{DynamicResource S_GrayLight}" IsChecked="True" Click="ToggleButton_Click">
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Grid>
                                    <Image x:Name="image" Height="20" Width="20" Source="../Resources/暂停.png" ToolTip="播放"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter Property="Source" Value="../Resources/开始.png" TargetName="image" />
                                        <Setter Property="ToolTip" Value="停止" TargetName="image" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.8" TargetName="image"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        --><!--<Setter Property="Fill" Value="{DynamicResource S_AccentBrush}" TargetName="ellipse"/>--><!--
                                        <Setter Property="Opacity" Value="0.86" TargetName="image"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" Value="0.5" TargetName="image"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>
                    
                    --><!--<local:ImageButton Margin="25,0"   x:Name="btn_rotateTransform" ImageSource="../Resources/循环播放.png" ToolTip="旋转"/>

                    <Border BorderBrush="#f1f1f1" BorderThickness="1" Height="25" Padding="10,0">
                        <TextBlock Text="{Binding ElementName=media_slider,Path=Value,Converter={StaticResource Convert.TimeSpan}}" Margin="0,0" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    </Border>

                    <Border BorderBrush="#f1f1f1" BorderThickness="1" Height="25" Padding="10,0" Margin="50,0" >
                        <TextBlock Text="{Binding ElementName=media_slider,Path=Value,Converter={StaticResource Convert.TimeSpan}}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                    </Border>--><!--
                </DockPanel> 

                --><!--音量--><!--
                <DockPanel Grid.Column="0" DockPanel.Dock="Right" Margin="10,0" VerticalAlignment="Center" HorizontalAlignment="Right">

                    --><!--<local:MediaButton Style="{StaticResource Style.Slider.FButton}"  FIconSize="15"  Margin="5,0"   FIcon="&#xeada;" ToolTip="打開文件夾"/>-->
                    <!--<local:MediaButton Style="{StaticResource Style.Slider.FButton}"  FIconSize="15"  FIcon="&#xe664;"/>--><!--
                    <local:ImageButton Margin="0,0,0,0"   ImageSource="../Resources/声音.png"  ToolTip="旋转"  />

                    <Slider x:Name="slider_sound" Style="{DynamicResource SliderStyle1}"  
                            VerticalAlignment="Center" IsMoveToPointEnabled="True"
                            ValueChanged="Slider_sound_ValueChanged" 
                            Width="100" 
                            Minimum="0" Maximum="1" SmallChange="0.01" />
               
                </DockPanel>

                --><!--全屏旋转按钮-->
                <!--
                <DockPanel Grid.Column="2"  Margin="10,0" HorizontalAlignment="Right">
                    <local:MediaButton Style="{StaticResource Style.Slider.FButton}"  FIconSize="15"  FIcon="&#xe9d0;" ToolTip="全屏"/>
                </DockPanel>-->

                <!--进度条--><!--
                <DockPanel>
                    <DockPanel  DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" > 
                        <TextBlock Text="{Binding ElementName=media_slider,Path=Value,Converter={StaticResource Convert.TimeSpan}}" Margin="5,0" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                        --><!--<local:MediaButton x:Name="btn_stop" Style="{StaticResource Style.Slider.FButton}"  FIcon="&#xe609;"  FIconSize="12" Width="18"  ToolTip="停止" DockPanel.Dock="Right" Click="Btn_stop_Click" VerticalAlignment="Center"/>-->
                        <!--<local:MediaButton x:Name="btn_addspeed" Style="{StaticResource Style.Slider.FButton}"  FIcon="&#xe9bb;"  FIconSize="15" ToolTip="加速" Width="20"  DockPanel.Dock="Right"   Click="Btn_addspeed_Click" VerticalAlignment="Center"/>--><!--

                        <TextBlock  x:Name="media_speed" Text="1X" Margin="15,0" VerticalAlignment="Center" DockPanel.Dock="Right"/>

                        <TextBlock Text="{Binding ElementName=media_slider,Path=Maximum,Converter={StaticResource Convert.TimeSpan}}" Margin="15,0" VerticalAlignment="Center" DockPanel.Dock="Right"/>


                        <Slider x:Name="media_slider" 
                                Style="{DynamicResource SliderStyle1}"   
                                Minimum="0"
                                Maximum="0" 
                                Value="0"  IsMoveToPointEnabled="True"
                                VerticalAlignment="Center" ValueChanged="Media_slider_ValueChanged"/>


                        --><!--Thumb.DragStarted="media_slider_DragStarted" 
                                Thumb.DragCompleted="media_slider_DragCompleted"--><!--
                    </DockPanel>
                </DockPanel>
            </DockPanel>-->
            
            <!--视频控件-->
            <Grid MouseDown="Grid_MouseDown">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Viewbox Grid.ColumnSpan="2" Grid.RowSpan="2" Stretch="Uniform">
                    <Grid >
                        <InkCanvas x:Name="canvas" 
                                   PreviewMouseLeftButtonDown="InkCanvas_MouseDown" 
                                   Background="Transparent"
                       MouseMove="InkCanvas_MouseMove"  
                                   Cursor="Arrow" ForceCursor="True" 
                                   Grid.ColumnSpan="3" Grid.RowSpan="3"
                       EditingMode="None" 
                                   PreviewMouseUp="InkCanvas_MouseUp"
                                   MouseUp="InkCanvas_MouseUp">
                            <InkCanvas.DefaultDrawingAttributes>
                                <DrawingAttributes Color="Transparent"/>
                            </InkCanvas.DefaultDrawingAttributes>

                            <MediaElement x:Name="media_media" Grid.ColumnSpan="2" Grid.RowSpan="2"
                                      Source="{Binding ElementName=mediaBrower,Path=SelectFile}" 
                                      LoadedBehavior="Manual">
                                <MediaElement.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </MediaElement.RenderTransform>
                            </MediaElement>

                            <local:DynamicShape x:Name="_dynamic" 
                                        Visibility="Collapsed" 
                                        WidthMatch="50"
                                        HeightMatch="50"/>

                            <Rectangle x:Name="rectangle_clip" Visibility="Collapsed" 
                               Width="{Binding ElementName=canvas,Path=ActualWidth}" 
                               Height="{Binding ElementName=canvas,Path=ActualHeight}" 
>
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="LightGray" Opacity="0.9"/>
                                </Rectangle.Fill>
                            </Rectangle>

                        </InkCanvas>
                    </Grid>
                </Viewbox>

                <ToggleButton x:Name="r_screen" 
                                      Content="放大" 
                                      Grid.ColumnSpan="3" 
                                      HorizontalAlignment="Right" 
                                      VerticalAlignment="Top"
                                      Checked="r_screen_Checked"
                                      Unchecked="r_screen_Checked" Margin="10">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <!--<Ellipse x:Name="ellipse" Height="40" Width="40" Fill="{DynamicResource S_AccentBrush}" IsHitTestVisible="False">

                                    </Ellipse>
                                    <TextBlock Text="&#xe76e;" Style="{StaticResource FIcon}" x:Name="txt" Foreground="{TemplateBinding Foreground}"
                                   FontSize="20" 
                                   ToolTip="显示"/>-->
                                <Image x:Name="image" Height="30" Width="30" Source="../Resources/放大.png" ToolTip="放大"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Opacity" Value="0.5" TargetName="image" />
                                    <Setter Property="ToolTip" Value="取消放大" TargetName="image" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8" TargetName="image"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <!--<Setter Property="Fill" Value="{DynamicResource S_AccentBrush}" TargetName="ellipse"/>-->
                                    <Setter Property="Opacity" Value="0.86" TargetName="image"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" TargetName="image"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
